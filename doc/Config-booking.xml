<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
	<!-- 引入配置文件 -->
	<properties resource="mybatis_generator_config.properties" />

	<!-- 指定数据连接驱动jar地址 -->
	<classPathEntry location="${datasource.classpath}" />

	<!-- 一个数据库一个context -->
	<context id="mysql">
		<!-- 注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" /><!-- 是否取消注释 -->
			<property name="suppressDate" value="false" /> <!-- 是否生成注释代时间戳 -->
		</commentGenerator>

		<!-- jdbc连接 -->
		<jdbcConnection driverClass="${datasource.driverClassName}"
			connectionURL="${datasource.url}" userId="${datasource.username}"
			password="${datasource.password}" />

		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.）这条好像没卵用 -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成实体类地址 -->
		<javaModelGenerator targetPackage="${targetpackage}.entity"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema -->
			<property name="enableSubPackages" value="false" />
			<!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true" />
			<property name="exampleMethodVisibility" value="public" />
			<property name="methodNameCalculator" value="extended" />
		</javaModelGenerator>

		<!-- 生成mapxml文件 -->
		<sqlMapGenerator targetPackage="${targetpackage}.sqlmap"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- 生成mapxml对应client，也就是接口dao -->
		<javaClientGenerator targetPackage="${targetpackage}.dao"
			targetProject="${project}" type="XMLMAPPER">
			<!-- 是否在当前路径下新加一层schema -->
			<property name="enableSubPackages" value="false" />
			<property name="exampleMethodVisibility" value="public" />
			<property name="methodNameCalculator" value="extended" />
		</javaClientGenerator>

		<!-- 配置表信息 -->
		<!-- <table schema="" tableName="bookingcom_booking_info"
			domainObjectName="BookingInfo">
			schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample 
				是否生成 example类

			忽略列，不生成bean 字段 <ignoreColumn column="FRED" />

			指定列的java数据类型<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" 
				/>


		</table>
		<table schema="" tableName="ari_update_info">
			<columnOverride column="single_rate" jdbcType="DECIMAL"
				javaType="java.lang.Double" />
			<columnOverride column="double_rate" jdbcType="DECIMAL"
				javaType="java.lang.Double" />
		</table>
		<table schema="" tableName="resv_mapping_info" /> -->
		<table schema="" tableName="user_info" domainObjectName="UserInfo"/>
		<table schema="" tableName="chat_msg_info" domainObjectName="ChatMsgInfo"/>

	</context>
</generatorConfiguration>